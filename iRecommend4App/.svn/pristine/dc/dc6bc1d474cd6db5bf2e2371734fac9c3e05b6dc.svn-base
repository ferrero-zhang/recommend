package com.ifeng.iRecommend.featureEngineering.tools;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.HttpURLConnection;
import java.net.URL;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import com.ifeng.iRecommend.featureEngineering.TextProTools;
import com.ifeng.iRecommend.featureEngineering.dataStructure.itemf;
import com.ifeng.iRecommend.featureEngineering.databaseOperation.IKVOperationv2;

public class YidianSimPost {
	private static final Log LOG = LogFactory.getLog("YidianSimPost");
	final private static String url = "http://ups.yidianzixun.com/featurestore/ifengtags";
	IKVOperationv2 ikvop = new IKVOperationv2("appitemdb");
	class data{
		@Expose
		@SerializedName("url")
		String url;
		@Expose
		@SerializedName("title")
		String title;
		@Expose
		@SerializedName("content")
		String content;
	}
	public static String scnt2cnt(String s_content)
	{
		if(s_content == null || s_content.isEmpty())
			return null;
		String content = s_content.replaceAll(" *_[a-zA-Z]+ *", "");
		content = content.replaceAll("http://.*?.(jpg|jpeg|gif|bmp|png|undefined)", "");
		return content;
	}
	public String getJson(String id){
		itemf item = ikvop.queryItemF(id, "c");
		if(item == null)
			return null;
		data d = new data();
		d.url = "";
		d.title = item.getTitle();
		d.content = scnt2cnt(item.getSplitContent());
		d.content = TextProTools.filterHtmlPure(d.content);
		Gson gson = new GsonBuilder().disableHtmlEscaping().create();
		String jResult = gson.toJson(d,data.class);
		return jResult;
	}
	public String send(String json)
	{
		if(json == null)
			return null;
		PrintWriter out = null;
        BufferedReader in = null;
        StringBuffer sbRes = new StringBuffer();
        try {
            URL realUrl = new URL(url);
            // 打开和URL之间的连接
            HttpURLConnection conn = (HttpURLConnection)realUrl.openConnection();
            // 设置通用的请求属性
            conn.setRequestMethod("POST");
            conn.setDoOutput(true);
            out = new PrintWriter(new OutputStreamWriter(conn.getOutputStream(), "UTF-8"));
            // 发送请求参数
            out.print(json);
            // flush输出流的缓冲
            out.flush();
            if (HttpURLConnection.HTTP_OK != conn.getResponseCode()) {
				if (conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST
						|| conn.getResponseCode() == HttpURLConnection.HTTP_INTERNAL_ERROR) {
					throw new Exception("post failed ErrorCode="+conn.getResponseCode());
				}
				LOG.error("ErrorCode="+conn.getResponseCode());
			} 		
            // 定义BufferedReader输入流来读取URL的响应
            in = new BufferedReader(
                    new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = in.readLine()) != null) {
            	sbRes.append(line).append("\r\n");
            }
        } catch (Exception e) {
            LOG.error("发送 POST 请求出现异常！"+e);
            e.printStackTrace();
            sbRes.append("Send error!");
        }
        //使用finally块来关闭输出流、输入流
        finally{
            try{
                if(out!=null){
                    out.close();
                }
                if(in!=null){
                    in.close();
                }
            }
            catch(IOException ex){
                ex.printStackTrace();
            }
        }
        return sbRes.toString();
	}
	public static void main(String[] args){
		YidianSimPost o = new YidianSimPost();
//		String id = "123325";
		String id = args[0];
		System.out.println(o.send(o.getJson(id)));
		System.exit(0);
	}
}
